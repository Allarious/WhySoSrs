function out = select_method_and_number_of_equations(numberOfEquations, numberOfMethod) 
    
    height = 70 * numberOfEquations * 1.5 + 60;
    
    width = 150 * (numberOfEquations + 2);
    
    S.fh = figure('units','pixels',...
              'position',[650 - width/2 325 - height/2 width height],...
              'menubar','none',...
              'name','chapter 6',...              
              'numbertitle','off',...
              'color',[0.6 0.2 0.35],...
              'resize','off');
          
    for i = 1:numberOfEquations
          for j = 1:numberOfEquations+1
              
              S.ed((numberOfEquations+1)*(i-1) + j) = uicontrol('style','edit',...
                    'units','pixels',...
                    'position',[150*j height - 60 - 50*i 50 30],...
                    'fontsize',14);
              S.tx((numberOfEquations+1)*(i-1) + j) = uicontrol('style','text',...
                    'units','pixels',...
                    'position',[150*j - 75 height-65-50*i 50 30],...
                    'backgroundColor',[0.6 0.2 0.35],...
                    'fontsize',14);
                if(j == numberOfEquations + 1)                   
                set(S.tx((numberOfEquations+1)*(i-1) + j),'string','=');
                else if(j == 1)
                set(S.tx((numberOfEquations+1)*(i-1) + j),'string',strcat('X' , num2str(j)));
                    else
                        set(S.tx((numberOfEquations+1)*(i-1) + j), 'string', strcat('+ X' , num2str(j)));
                    end
                end
            end
    end
    counter = numberOfEquations;
    for i = numberOfEquations*(numberOfEquations+1) + 1:numberOfEquations*(numberOfEquations+1) + numberOfEquations
        counter = counter + 1;
        S.ed(i) = uicontrol('style','edit',...
                    'units','pixels',...
                    'enable','inactive',...
                    'backgroundColor', [0.9 0.9 0.9],...
                    'position',[200 height - 60 - 50*counter 50 30],...
                    'fontsize',14);
                
        S.tx(i) = uicontrol('style','text',...
                    'units','pixels',...
                    'backgroundColor', [0.6 0.2 0.35],...
                    'position',[150 height - 65 - 50*counter 50 30],...
                    'string', 'hello',...
                    'fontsize',14);
         set(S.tx(i), 'string', strcat('X' , num2str(counter - numberOfEquations) , ' ='));
                
    end
    S.ans =  uicontrol('style','edit',...
                 'units','pix',...
                'position',[ width/8 20 width*3/4 height-100],...
                'enable', 'inactive',...
                'visible','off');
    S.pb1 = uicontrol('style','pushbutton',...
                 'units','pix',...
                 'backgroundColor',[71/255 209/255 71/255],...
                'position',[width - numberOfEquations*25 0 numberOfEquations*25 numberOfEquations*25],...
                'string','Calculate',...
                'callback',{@pb_call1});
    S.pb2 = uicontrol('style','pushbutton',...
                 'units','pix',...
                'position',[0 height - 50 100 50],...
                'string','Answer',...
                'callback',{@pb_call2});
    S.pb3 = uicontrol('style','pushbutton',...
                  'units','pix',...
                 'position',[100 height - 50 100 50],...
                 'string','Step By Step',...
                 'enable','off',...
                 'callback',{@pb_call3});
            
    function [] = pb_call1(varargin)
        set(S.pb3,'enable','on');
        if(numberOfMethod == 1)
            %call the function here
%             get the parameters
%             for i = 1:numberOfEquations*(numberOfEquations+1)
%                 get(S.ed(i), 'string');
%             end
%             set the parameters
%             for i = numberOfEquations*(numberOfEquations+1) + 1:numberOfEquations*(numberOfEquations+1) + numberOfEquations
%                 set(S.ed(i), 'string', the answer for xi)
%             end
        end
        if(numberOfMethod == 2)
            %call the function here
        end
        if(numberOfMethod == 3)
            %call the function here
        end
        if(numberOfMethod == 4)
            %call the function here
        end
        if(numberOfMethod == 5)
            %call the function here
        end
        if(numberOfMethod == 6)
            %call the function here
        end
        if(numberOfMethod == 7)
            %call the function here
        end
    end

    function [] = pb_call2(varargin)
        for i = 1:numberOfEquations*(numberOfEquations+1) + numberOfEquations
            set(S.tx(i),{'visible'},{'on'});
            set(S.ed(i),{'visible'},{'on'});
        end
        set(S.pb1,{'visible'},{'on'});
        set(S.ans,{'visible'},{'off'});
    end

    function [] = pb_call3(varargin)
        for i = 1:numberOfEquations*(numberOfEquations+1) + numberOfEquations
            set(S.tx(i),{'visible'},{'off'});
            set(S.ed(i),{'visible'},{'off'});
        end
        set(S.pb1,{'visible'},{'off'});
        set(S.ans,{'visible'},{'on'});
    end

end